{"version":3,"sources":["included-file.js"],"names":["IncludedFile","filePath","backingInputFile","pluginOptions","path","inputFile","extension","extname","basename","file","referencedImportPaths","resolve","reject","readFile","err","result","contents","globalVariablesText","rawContents","options","addJavaScript","addStylesheet","data","message","error","getArch","getContentsAsString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAEqBA,Y;AACnB,wBAAYC,QAAZ,EAAsBC,gBAAtB,EAAwCC,aAAxC,EAAuD;AAAA;;AACrD,SAAKC,IAAL,GAAYH,QAAZ;AACA,SAAKI,SAAL,GAAiBH,gBAAjB;AACA,SAAKI,SAAL,GAAiB,eAAKC,OAAL,CAAa,KAAKH,IAAlB,CAAjB;AACA,SAAKI,QAAL,GAAgB,eAAKA,QAAL,CAAc,KAAKJ,IAAnB,CAAhB;AACD;;;;;6FAEmBK,I;;;;;AAClBA,qBAAKC,qBAAL,GAA6B,EAA7B;;;uBAEuB,sBAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,yBAAqB,aAAGC,QAAH,CAAYJ,KAAKL,IAAjB,EAAuB,OAAvB,EAAgC,UAASU,GAAT,EAAcC,MAAd,EAAsB;AAC5G,wBAAID,GAAJ,EAASF,OAAOE,GAAP;AACTH,4BAAQI,MAAR;AACD,mBAHuD,CAArB;AAAA,iBAAZ,C;;;AAAvBN,qBAAKO,Q;;;AAKL,oBAAIb,cAAcc,mBAAlB,EAAuC;AACrCR,uBAAKO,QAAL,GAAmBb,cAAcc,mBAAjC,YAA2DR,KAAKO,QAAhE;AACD;AACDP,qBAAKS,WAAL,GAAmBT,KAAKO,QAAxB;;;;;;;;;;;;;;;;;;kCAGYG,O,EAAS;AACrB,WAAKd,SAAL,CAAee,aAAf,CAA6BD,OAA7B;AACD;;;kCAEaA,O,EAAS;AACrB,WAAKd,SAAL,CAAegB,aAAf,CAA6BF,OAA7B;AACD;;;0BAEKG,I,EAAM;AACVA,WAAKC,OAAL,GAAe,wCAAwCD,KAAKC,OAA5D;AACA,WAAKlB,SAAL,CAAemB,KAAf,CAAqBF,IAArB;AACD;;;8BAES;AACR,aAAO,KAAKjB,SAAL,CAAeoB,OAAf,EAAP;AACD;;;kCAEa;AACZ,aAAO,KAAKjB,QAAZ;AACD;;;0CAEqB;AACpB,aAAO,KAAKQ,QAAZ;AACD;;;qCAEgB;AACf,aAAO,KAAKZ,IAAZ;AACD;;;mCAEc;AACb,aAAO,KAAKE,SAAZ;AACD;;;qCAEgB;AACf,aAAO,EAAP;AACD;;;qCAEgB;AACf,aAAO,IAAP;AACD;;;uCAEkB;AACjB,aAAO,KAAKF,IAAZ;AACD;;;oCAEe;AACd,aAAO,mBAAK,KAAKsB,mBAAL,EAAL,CAAP;AACD;;;;;kBArEkB1B,Y;AAuEpB","file":"included-file.js","sourcesContent":["import path from 'path';\r\nimport fs from 'fs';\r\nimport sha1 from 'sha1';\r\n\r\nexport default class IncludedFile {\r\n  constructor(filePath, backingInputFile, pluginOptions) {\r\n    this.path = filePath;\r\n    this.inputFile = backingInputFile;\r\n    this.extension = path.extname(this.path);\r\n    this.basename = path.basename(this.path);\r\n  }\r\n\r\n  async prepInputFile(file) {\r\n    file.referencedImportPaths = [];\r\n\r\n    file.contents = await (new Promise((resolve, reject) => fs.readFile(file.path, 'utf-8', function(err, result) {\r\n      if (err) reject(err);\r\n      resolve(result);\r\n    })));\r\n\r\n    if (pluginOptions.globalVariablesText) {\r\n      file.contents = `${pluginOptions.globalVariablesText}\\n\\n${file.contents}`;\r\n    }\r\n    file.rawContents = file.contents;\r\n  }\r\n\r\n  addJavaScript(options) {\r\n    this.inputFile.addJavaScript(options);\r\n  }\r\n\r\n  addStylesheet(options) {\r\n    this.inputFile.addStylesheet(options);\r\n  }\r\n\r\n  error(data) {\r\n    data.message = 'Error in explicitly included file: ' + data.message;\r\n    this.inputFile.error(data);\r\n  }\r\n\r\n  getArch() {\r\n    return this.inputFile.getArch();\r\n  }\r\n\r\n  getBasename() {\r\n    return this.basename;\r\n  }\r\n\r\n  getContentsAsString() {\r\n    return this.contents;\r\n  }\r\n\r\n  getDisplayPath() {\r\n    return this.path;\r\n  }\r\n\r\n  getExtension() {\r\n    return this.extension;\r\n  }\r\n\r\n  getFileOptions() {\r\n    return {};\r\n  }\r\n\r\n  getPackageName() {\r\n    return null;\r\n  }\r\n\r\n  getPathInPackage() {\r\n    return this.path;\r\n  }\r\n\r\n  getSourceHash() {\r\n    return sha1(this.getContentsAsString());\r\n  }\r\n\r\n};\r\n\r\n"]}